[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "manamind"
version = "0.1.0"
description = "AI agent for playing Magic: The Gathering at superhuman level"
authors = [{name = "ManaMind Team", email = "team@manamind.ai"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Games/Entertainment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    # Core ML Framework
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "numpy>=1.24.0",
    
    # Game Engine Integration
    "py4j>=0.10.9",  # Python-Java bridge for Forge
    "jpype1>=1.4.1",  # Alternative Java integration
    
    # Configuration & Serialization
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "PyYAML>=6.0",
    "toml>=0.10.2",
    
    # Networking & HTTP
    "httpx>=0.24.0",
    "requests>=2.31.0",
    
    # Logging & Monitoring
    "structlog>=23.0.0",
    "rich>=13.0.0",
    "tensorboard>=2.13.0",
    "wandb>=0.15.0",  # Weights & Biases for experiment tracking
    
    # Data Processing
    "pandas>=2.0.0",
    "polars>=0.18.0",  # Fast dataframe library
    
    # Utilities
    "tqdm>=4.65.0",
    "typer>=0.9.0",  # CLI framework
    "click>=8.1.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",  # Parallel testing
    
    # Code Quality
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "pre-commit>=3.3.0",
    
    # Documentation
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    
    # Profiling & Performance
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0",
]

training = [
    # Distributed Training
    "ray[default]>=2.6.0",
    "ray[tune]>=2.6.0",
    
    # Advanced ML Tools
    "optuna>=3.2.0",  # Hyperparameter optimization
    "lightning>=2.0.0",  # PyTorch Lightning
    
    # GPU Monitoring
    "gpustat>=1.1.0",
    "nvidia-ml-py>=12.0.0",
]

mtga = [
    # Screen Reading & Input Simulation (Future Phase 2)
    "opencv-python>=4.8.0",
    "Pillow>=10.0.0",
    "pytesseract>=0.3.10",
    "pyautogui>=0.9.54",
    "pynput>=1.7.6",
]

docker = [
    "docker>=6.1.0",
    "docker-compose>=1.29.2",
]

[project.urls]
Homepage = "https://github.com/manamind/manamind"
Repository = "https://github.com/manamind/manamind"
Documentation = "https://manamind.readthedocs.io"

[project.scripts]
manamind = "manamind.cli:main"
train = "manamind.training.train:main"
eval = "manamind.evaluation.evaluate:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 79
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.flake8]
max-line-length = 79
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".tox"
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "py4j.*",
    "jpype1.*",
    "cv2.*",
    "pytesseract.*",
    "pyautogui.*",
    "pynput.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src/manamind",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "forge: marks tests that require Forge engine",
    "gpu: marks tests that require GPU",
]

[tool.coverage.run]
source = ["src/manamind"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]